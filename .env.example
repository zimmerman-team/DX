# --------------------------------------------------------------------------- #
# DX Client
GENERATE_SOURCEMAP=false
REACT_APP_API=http://server.dx/  # Prod: http://server.dx/ (URL to server setup in nginx) | Dev: http://localhost:4200 | Test: http://server.test.dx/ (URL to server setup in nginx) | Staging: http://server.staging.dx/ (URL to server setup in nginx)
REACT_APP_MAPBOX_TOKEN='your token'
REACT_APP_GOOGLE_ANALYTICS_ID='your id'
REACT_APP_CMS_API='the cms address, not currently used, left in for future use'
REACT_APP_CMS_TOKEN='your token, not currently used, left in for future use'
REACT_APP_GOOGLE_API_CLIENT_ID='your id for google drive integration'
REACT_APP_GOOGLE_API_DEV_KEY='your key for google drive integration'
REACT_APP_AUTH0_DOMAIN='your auth0 tenant app domain'
REACT_APP_AUTH0_CLIENT='your auth0 tenant app client id'
REACT_APP_AUTH0_AUDIENCE='your auth0 tenant app audience'
REACT_APP_HUBSPOT_PORTAL_ID='your hubspot portal id'
REACT_APP_HUBSPOT_SUBSCRIBE_FORM_ID='your hubspot subscribe form id'
REACT_APP_INTERCOM_APP_ID='your intercom app id'
REACT_APP_ONEDRIVE_CLIENT_ID='your one drive client id'
REACT_APP_ENV_TYPE= # Prod: prod | Dev: dev | Test: test | Staging: staging
REACT_APP_LIVE_SESSION_ID='your livesession id'

# --------------------------------------------------------------------------- #
# DX Server
# Make sure the user/pass matches the setup under #MongoDB. The host should be the docker-compose name of the service
MONGO_HOST=mongo # docker-compose name of the service, remove in case of local development # Prod: mongo | Dev: mongo-dev | Test: mongo-test | Staging: mongo-staging
MONGO_USERNAME=admin_example # only used in docker-compose, remove in case of local development, make sure to match the INITDB values
MONGO_PASSWORD=exampl3_123! # only used in docker-compose, remove in case of local development, make sure to match the INITDB values
MONGO_AUTH_SOURCE=admin # only used in docker-compose, remove in case of local development
DX_BACKEND_DIR=/app/dx.backend/ # the path to the backend directory, in docker this is the correct path, locally replace with correct local directory
PARSED_DATA_FILES_PATH='/app/dx.backend/parsed-data-files/'
AUTH0_DOMAIN='your auth0 tenant app domain'
AUTH0_AUDIENCE='your auth0 tenant app client id'
STRIPE_API_KEY='your stripe api key'
STRIPE_PRODUCT_FREE_MONTHLY_PRICE_ID='your stripe free product monthly price id'
STRIPE_PRODUCT_FREE_ANNUALLY_PRICE_ID='your stripe free product annually price id'
STRIPE_PRODUCT_PRO_MONTHLY_PRICE_ID='your stripe pro product monthly price id'
STRIPE_PRODUCT_PRO_ANNUALLY_PRICE_ID='your stripe pro product annually price id'
STRIPE_PRODUCT_TEAM_MONTHLY_PRICE_ID='your stripe team product monthly price id'
STRIPE_PRODUCT_TEAM_ANNUALLY_PRICE_ID='your stripe team product annually price id'
STRIPE_PRODUCT_ENTERPRISE_MONTHLY_PRICE_ID='your stripe enterprise product monthly price id'
STRIPE_PRODUCT_ENTERPRISE_ANNUALLY_PRICE_ID='your stripe enterprise product annually price id'
# Media
GOOGLE_API_KEY="Google api key from cloud console with youtube api access"
SHUTTERSTOCK_API_TOKEN="shutterstock api token"
UNSPLASH_ACCESS_KEY="Unsplash access key"
VIMEO_ACCESS_TOKEN="Vimeo access token"

INTERCOM_SECRET_KEY="can be gotten from intercom"
INTERCOM_ACCESS_TOKEN="can be gotten from intercom"

REDIS_HOST=redis # replace host with localhost incase of local development else the following - Prod: redis  | Dev: redis-dev | Test: redis-test | Staging: redis-staging
REDIS_PASSWORD="" # password used in docker-compose to initialise redis, also used to access redis from dx.server

# --------------------------------------------------------------------------- #
# NGINX - only used in production docker. Leave empty in case of local development
MAIN_DOMAIN=localhost # Prod: localhost | Dev: | Test: localhost | Staging: localhost
APP_SUBDOMAIN=client # Prod: client | Dev: | Test: | Staging:
API_SUBDOMAIN=server # Prod: server | Dev: | Test: | Staging:
BACKEND_SUBDOMAIN=backend # Prod: backend | Dev: | Test: backend-test | Staging: backend-staging

# --------------------------------------------------------------------------- #
# Mongo - only used in docker. Leave empty in case of local development
MONGO_INITDB_ROOT_USERNAME=admin_example
MONGO_INITDB_ROOT_PASSWORD=exampl3_123!
MONGO_INITDB_DATABASE=the-data-explorer-db

# --------------------------------------------------------------------------- #
# DX Backend - we use port 4004 across the project.
DATA_EXPLORER_SSR='/app/' # this is used in docker, locally point to your local directory

# --------------------------------------------------------------------------- #
# DX Backend - we use port 4004 across the project.
AIAPI_API_KEY=<Any custom key that is to be passed as a header to any call>
AIAPI_OPENAI_API_KEY=<Your openAI API Key>
AIAPI_PARSED_DATA_FILES=/parsed-data-files/ # <For DX - the path to dx.backend/parsed-data-files/, defaults to / as this is the mounted directory in docker-compose>

# --------------------------------------------------------------------------- #
# Environment Setup
ENV_TYPE= # Prod: prod | Dev: dev | Test: test | Staging: staging
